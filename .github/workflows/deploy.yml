name: Deploy

on:
  push:
    branches: [ '**' ]

jobs:


 versionning:
    name: Versionning
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.genver.outputs.version }}
    steps:
    - name: Checkout
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3
      with:
        ref: ${{ github.ref }}
        fetch-depth: 0

    - name: Generate Version
      id: genver
      run: |
        VERSION=$(docker run --rm -v $(pwd):/repo codacy/git-version /bin/git-version --folder=/repo --release-branch=${{ github.ref_name }}-pre --dev-branch=main)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "VERSION : $VERSION"
        echo "Version :" >> $GITHUB_STEP_SUMMARY
        echo "$VERSION" >> $GITHUB_STEP_SUMMARY

 build:
    runs-on: ubuntu-latest
    needs:
      - versionning
    env:
      GENVERSION: ${{ needs.versionning.outputs.version }}
    steps:
    - name: Checkout
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3
      with:
        ref: ${{ github.ref }}
        fetch-depth: 0
        submodules: true

    - name: Build the package
      working-directory: csharp
      run: |
         dotnet build ArmoniK.Utils.sln -c Release

    - name: Pack the package VERSION
      working-directory: csharp
      run: |
        dotnet pack ArmoniK.Utils.sln -c Release -o /tmp/packages -p:Version=$GENVERSION

    - name: Push the package
      working-directory: csharp
      run: |
        find /tmp/packages -name 'ArmoniK*.nupkg' ! -name '*test*.nupkg' -exec dotnet nuget push /tmp/packages/ArmoniK.Utils.*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate --no-symbols \;

 test:
    needs:
      - build

    strategy:
      matrix:
        dotnet:
          - version: ""
            framework: "net4.7"
          - version: ""
            framework: "net4.8"
          - version: "5.0"
            framework: "net5.0"
          - version: "6.0"
            framework: "net6.0"
          - version: "7.0"
            framework: "net7.0"
        platform:
          - os: ubuntu-latest
            runtime: linux-x64
          - os: windows-latest
            runtime: windows-x64
        exclude:
          - dotnet:
              version: ""
              framework: "net4.7"
            platform:
              os: ubuntu-latest
              runtime: linux-x64
          - dotnet:
              version: ""
              framework: "net4.8"
            platform:
              os: ubuntu-latest
              runtime: linux-x64
      fail-fast: false
    runs-on: ${{ matrix.platform.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3

    - name: Install .NET Core
      uses: actions/setup-dotnet@3447fd6a9f9e57506b15f895c5b76d3b197dc7c2 # v3
      if: ${{ matrix.dotnet.version }} != ""
      with:
        dotnet-version: ${{ matrix.dotnet.version }}

    - name: Run tests
      working-directory: csharp
      run: |
        dotnet test --runtime ${{ matrix.platform.runtime }} -f ${{ matrix.dotnet.framework }} --logger "trx;LogFileName=test-results.trx"

    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: IntegrationTests ${{ matrix.platform.runtime }} ${{ matrix.dotnet.framework }}
        path: ./csharp/tests/TestResults/test-results.trx
        reporter: dotnet-trx
